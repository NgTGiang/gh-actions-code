name: 4. DEMO - Automation Test Workflow - UI Selenium JS
on:
  push:
    branches: 
      - 'test_workflow'
      - 'analyze_workflow'
  workflow_dispatch:
    name: on-demand
    inputs:
      ENV:
        type: choice
        required: true
        description: 'Please, choose environment:'
        default: 'QA'
        options:
          - DEV
          - QA
          - CT
          - PROD
      TEST_TYPE:
        type: choice
        required: true
        description: 'Please, choose test type:'
        default: 'Smoke'
        options:
          - Smoke
          - Sanity
          - Regression
      BROWSER:
        type: choice
        required: true
        description: 'Please, choose browser:'
        default: 'Chrome'
        options:
          - chrome
          - firefox
          - edge
jobs:
  test-summary:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Actor is ${{ github.actor }}"
      - run: echo "Branch is ${{github.ref}}"
      - run: echo "BDD tag is @${{github.event.inputs.TEST_TYPE}}_${{github.event.inputs.ENV}}"

  regression-test:
    runs-on: ubuntu-latest
    needs: test-summary
    steps:
      - name: 2.1 Checkout code
        uses: actions/checkout@v3

      - name: 2.2 Convert input strings to lowercase
        id: toLowerCase
        run: | 
          echo "toLowerCase_env=${UPPERCASE_ENV,,}" >>$GITHUB_OUTPUT
          echo "toLowerCase_test_type=${UPPERCASE_TEST_TYPE,,}" >>$GITHUB_OUTPUT
          echo "toUpperCase_browser=${LOWERCASE_BROWSER,,}" >>$GITHUB_OUTPUT
        env:
          UPPERCASE_ENV: ${{ github.event.inputs.ENV}}
          UPPERCASE_TEST_TYPE: ${{ github.event.inputs.TEST_TYPE}}
          LOWERCASE_BROWSER: ${{ github.event.inputs.BROWSER}}

      - name: 2.3 Set up Node JS
        uses: actions/setup-node@v3
        with:
          node-version: '16.16'

      - name: 2.4 Set up browser
#        id: setup_browser
#        run: |
#            case ${{ github.event.inputs.BROWSER }} in
#            'chrome')
#              browser_type='chromium'
#              ;;
#            'firefox')
#              browser_type='firefox'
#              ;;
#            'edge')
#              browser_type='webkit'
#              ;;
#            esac
#            echo "::set-output name=browser-type::$browser_type"

#      - name: 2.4 Set up browser
#        uses: actions/browser@v2
#        with:
#          browser-type: ${{ steps.setup_browser.outputs.browser-type }}
        uses: browser-actions/setup-firefox@v1
        if: ${{ github.event.inputs.BROWSER }} == 'firefox'
      - uses: browser-actions/setup-chromium@v1
        if: ${{ github.event.inputs.BROWSER }} == 'chromium'
      - uses: browser-actions/setup-edge@v1
        if: ${{ steps.setup_browser.outputs.browser-type }} == 'edge'

      # - name: 2.4 Set up Chrome browser
      #   if: ${{ github.event.inputs.BROWSER}} == 'chrome'
      #     uses: browser-actions/setup-chrome@v1
      #   - run: chrome --version

      # - name: 2.4 Set up Edge browser
      #   if: ${{ github.event.inputs.BROWSER}} == 'edge'
      #     uses: browser-actions/setup-edge@v1
      #   - run: edge --version

      # - name: 2.4 Set up Firefox browser
      #   if: ${{ github.event.inputs.BROWSER}} == 'firefox'
      #     uses: browser-actions/setup-chrome@v1
      #   - run: firefox --version

      # - run: |
      #     if [ ${{ github.event.inputs.BROWSER}} == 'Chrome' ]; then
      #       chrome --version
      #     if [ ${{ github.event.inputs.BROWSER}} == 'Edge' ]; then
      #       (Get-Item (Get-Command msedge).Source).VersionInfo.ProductVersion
      #     if [ ${{ github.event.inputs.BROWSER}} == 'Firefox' ]; then
      #       firefox --version

      # - name: Edge
      #   uses: browser-actions/setup-edge@v1
      # - run: (Get-Item (Get-Command msedge).Source).VersionInfo.ProductVersion

      # - name: Firefox
      #   uses: browser-actions/setup-firefox@v1
      # - run: firefox --version

      # - name: 2.5 Config .env file
      # - name: 2.6 Test run
      # - name: 2.7 Upload report artifact
